# Generated by Django 5.0.1 on 2025-10-14 04:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_userprofile_token_balance_userprofile_tokens_earned_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='userprofile',
            name='token_balance',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='tokens_earned',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='tokens_spent',
        ),
        migrations.CreateModel(
            name='AchievementBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_type', models.CharField(choices=[('first_share', 'First Share'), ('knowledge_master', 'Knowledge Master'), ('helpful_peer', 'Helpful Peer'), ('early_adopter', 'Early Adopter'), ('blockchain_verified', 'Blockchain Verified'), ('privacy_advocate', 'Privacy Advocate'), ('zkp_user', 'ZKP User')], max_length=50)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(default='üèÜ', max_length=10)),
                ('nft_metadata', models.JSONField(default=dict)),
                ('blockchain_tx', models.CharField(blank=True, max_length=100, null=True)),
                ('minted_on_chain', models.BooleanField(default=False)),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge_type')},
            },
        ),
        migrations.CreateModel(
            name='NetworkGovernance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('proposal_type', models.CharField(choices=[('feature', 'Feature Request'), ('parameter', 'Network Parameter'), ('moderation', 'Content Moderation'), ('upgrade', 'Protocol Upgrade')], max_length=50)),
                ('votes_for', models.IntegerField(default=0)),
                ('votes_against', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('active', 'Active'), ('passed', 'Passed'), ('rejected', 'Rejected'), ('executed', 'Executed')], default='active', max_length=20)),
                ('blockchain_proposal_id', models.CharField(blank=True, max_length=100, null=True)),
                ('on_chain', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('voting_ends_at', models.DateTimeField()),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('proposed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReputationScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('knowledge_shared', models.IntegerField(default=0)),
                ('knowledge_downloaded', models.IntegerField(default=0)),
                ('upvotes_received', models.IntegerField(default=0)),
                ('helpful_votes', models.IntegerField(default=0)),
                ('total_score', models.IntegerField(default=0)),
                ('rank', models.CharField(default='Newcomer', max_length=50)),
                ('last_blockchain_sync', models.DateTimeField(blank=True, null=True)),
                ('blockchain_proof', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reputation', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-total_score'],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.CharField(choices=[('for', 'For'), ('against', 'Against'), ('abstain', 'Abstain')], max_length=10)),
                ('voting_power', models.IntegerField(default=1)),
                ('blockchain_signature', models.TextField(blank=True, null=True)),
                ('voted_at', models.DateTimeField(auto_now_add=True)),
                ('proposal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposal_votes', to='core.networkgovernance')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('proposal', 'voter')},
            },
        ),
        migrations.AddField(
            model_name='networkgovernance',
            name='voters',
            field=models.ManyToManyField(related_name='voted_proposals', through='core.Vote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='TokenTransaction',
        ),
    ]
