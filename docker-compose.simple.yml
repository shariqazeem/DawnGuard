version: '3.8'

services:
  # Main CypherVault Application
  web:
    build: .
    container_name: cyphervault_web
    command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=${SECRET_KEY:-django-insecure-hackathon-demo-key}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-hackathon-encryption-key-32chars}
      - ALLOWED_HOSTS=*
      - OLLAMA_HOST=http://ollama:11434
      - IPFS_API_URL=http://ipfs:5001
      - IPFS_GATEWAY=http://ipfs:8080
    depends_on:
      - ollama
      - ipfs
    networks:
      - cyphervault_network
    restart: unless-stopped

  # Nginx Reverse Proxy (HTTP only)
  nginx:
    image: nginx:alpine
    container_name: dawnguard_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-http.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    networks:
      - cyphervault_network
    restart: unless-stopped

  # Ollama for Local LLM
  ollama:
    image: ollama/ollama:latest
    container_name: dawnguard_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - cyphervault_network
    restart: unless-stopped

  # IPFS for Decentralized File Storage
  ipfs:
    image: ipfs/kubo:latest
    container_name: dawnguard_ipfs
    environment:
      - IPFS_PROFILE=server
      - IPFS_PATH=/data/ipfs
    volumes:
      - ipfs_data:/data/ipfs
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "5001:5001"
      - "8080:8080"
    networks:
      - cyphervault_network
    restart: unless-stopped

volumes:
  static_volume:
  media_volume:
  ollama_data:
  ipfs_data:

networks:
  cyphervault_network:
    driver: bridge
