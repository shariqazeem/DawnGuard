version: '3.8'

services:
  # Main CypherVault Application
  web:
    build: .
    container_name: cyphervault_web
    command: sh -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=django-insecure-hackathon-demo-key-change-in-production
      - ENCRYPTION_KEY=hackathon-encryption-key-32chars
      - ALLOWED_HOSTS=*
      - OLLAMA_HOST=http://ollama:11434
      - IPFS_API_URL=http://ipfs:5001
      - IPFS_GATEWAY=http://ipfs:8080
    depends_on:
      - ollama
      - ipfs
    networks:
      - cyphervault_network
    restart: unless-stopped

  # Nginx Reverse Proxy with SSL
  nginx:
    build: ./nginx
    container_name: dawnguard_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    depends_on:
      - web
    networks:
      - cyphervault_network
    restart: unless-stopped
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: dawnguard_certbot
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - cyphervault_network
    restart: unless-stopped

  # Ollama for Local LLM
  ollama:
    image: ollama/ollama:latest
    container_name: dawnguard_ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks:
      - cyphervault_network
    restart: unless-stopped

  # IPFS for Decentralized File Storage
  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: dawnguard_ipfs
    environment:
      - IPFS_PROFILE=default  # Changed from 'server' to allow public connectivity
      - IPFS_PATH=/data/ipfs
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_staging:/export
    ports:
      - "4001:4001"     # P2P swarm (TCP & UDP for DHT)
      - "4001:4001/udp" # UDP explicitly for DHT
      - "5001:5001"     # API
      - "8080:8080"     # Gateway
    networks:
      - cyphervault_network
    restart: unless-stopped
    # Enable DHT and public network connectivity
    command: ["daemon", "--migrate=true", "--enable-gc", "--routing=dhtclient"]

volumes:
  static_volume:
  media_volume:
  ollama_data:
  ipfs_data:
  ipfs_staging:
  certbot_conf:
  certbot_www:

networks:
  cyphervault_network:
    driver: bridge
